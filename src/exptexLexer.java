// Generated from exptex.g4 by ANTLR 4.0
import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast"})
public class exptexLexer extends Lexer {
	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		T__15=1, T__14=2, T__13=3, T__12=4, T__11=5, T__10=6, T__9=7, T__8=8, 
		T__7=9, T__6=10, T__5=11, T__4=12, T__3=13, T__2=14, T__1=15, T__0=16, 
		SUM=17, FOR=18, CHOOSE=19, FROM=20, PROD=21, TO=22, LIMIT=23, AS=24, PROB=25, 
		OVER=26, OF=27, MOD=28, XOR=29, FUNC=30, ID=31, SPACE=32, CR=33, NEWLINE=34, 
		NUM=35, STRING=36, DIVDIV=37, DIV=38, MATH_SYMBOL=39, DOT_DOT=40;
	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	public static final String[] tokenNames = {
		"<INVALID>",
		"']'", "'%'", "'^'", "')'", "'_'", "'+'", "'['", "'*'", "'-'", "'('", 
		"'@'", "'''", "'{'", "'#'", "'}'", "'|'", "'sum'", "'for'", "'choose'", 
		"'from'", "'prod'", "'to'", "'limit'", "'as'", "'prob'", "'over'", "'of'", 
		"'mod'", "'xor'", "FUNC", "ID", "SPACE", "CR", "NEWLINE", "NUM", "STRING", 
		"'//'", "'/'", "MATH_SYMBOL", "'..'"
	};
	public static final String[] ruleNames = {
		"T__15", "T__14", "T__13", "T__12", "T__11", "T__10", "T__9", "T__8", 
		"T__7", "T__6", "T__5", "T__4", "T__3", "T__2", "T__1", "T__0", "SUM", 
		"FOR", "CHOOSE", "FROM", "PROD", "TO", "LIMIT", "AS", "PROB", "OVER", 
		"OF", "MOD", "XOR", "FUNC", "ID", "SPACE", "CR", "NEWLINE", "NUM", "STRING", 
		"DIVDIV", "DIV", "MATH_SYMBOL", "DOT_DOT"
	};


	public exptexLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "exptex.g4"; }

	@Override
	public String[] getTokenNames() { return tokenNames; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	@Override
	public void action(RuleContext _localctx, int ruleIndex, int actionIndex) {
		switch (ruleIndex) {
		case 31: SPACE_action((RuleContext)_localctx, actionIndex); break;

		case 32: CR_action((RuleContext)_localctx, actionIndex); break;
		}
	}
	private void CR_action(RuleContext _localctx, int actionIndex) {
		switch (actionIndex) {
		case 1: skip();  break;
		}
	}
	private void SPACE_action(RuleContext _localctx, int actionIndex) {
		switch (actionIndex) {
		case 0: skip();  break;
		}
	}

	public static final String _serializedATN =
		"\2\4*\u011d\b\1\4\2\t\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7\t\7\4\b\t"+
		"\b\4\t\t\t\4\n\t\n\4\13\t\13\4\f\t\f\4\r\t\r\4\16\t\16\4\17\t\17\4\20"+
		"\t\20\4\21\t\21\4\22\t\22\4\23\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27"+
		"\t\27\4\30\t\30\4\31\t\31\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36"+
		"\t\36\4\37\t\37\4 \t \4!\t!\4\"\t\"\4#\t#\4$\t$\4%\t%\4&\t&\4\'\t\'\4"+
		"(\t(\4)\t)\3\2\3\2\3\3\3\3\3\4\3\4\3\5\3\5\3\6\3\6\3\7\3\7\3\b\3\b\3\t"+
		"\3\t\3\n\3\n\3\13\3\13\3\f\3\f\3\r\3\r\3\16\3\16\3\17\3\17\3\20\3\20\3"+
		"\21\3\21\3\22\3\22\3\22\3\22\3\23\3\23\3\23\3\23\3\24\3\24\3\24\3\24\3"+
		"\24\3\24\3\24\3\25\3\25\3\25\3\25\3\25\3\26\3\26\3\26\3\26\3\26\3\27\3"+
		"\27\3\27\3\30\3\30\3\30\3\30\3\30\3\30\3\31\3\31\3\31\3\32\3\32\3\32\3"+
		"\32\3\32\3\33\3\33\3\33\3\33\3\33\3\34\3\34\3\34\3\35\3\35\3\35\3\35\3"+
		"\36\3\36\3\36\3\36\3\37\3\37\6\37\u00b0\n\37\r\37\16\37\u00b1\3\37\3\37"+
		"\3\37\3\37\3\37\3\37\3\37\3\37\3\37\3\37\3\37\3\37\3\37\3\37\3\37\3\37"+
		"\3\37\3\37\3\37\3\37\3\37\5\37\u00c9\n\37\3 \3 \7 \u00cd\n \f \16 \u00d0"+
		"\13 \3!\6!\u00d3\n!\r!\16!\u00d4\3!\3!\3\"\3\"\3\"\3\"\3#\3#\3$\6$\u00e0"+
		"\n$\r$\16$\u00e1\3$\7$\u00e5\n$\f$\16$\u00e8\13$\3$\3$\6$\u00ec\n$\r$"+
		"\16$\u00ed\5$\u00f0\n$\3%\3%\3%\3%\7%\u00f6\n%\f%\16%\u00f9\13%\3%\3%"+
		"\3&\3&\3&\3\'\3\'\3(\3(\3(\3(\3(\3(\3(\3(\3(\3(\3(\3(\3(\3(\3(\3(\3(\3"+
		"(\3(\3(\3(\3(\3(\5(\u0119\n(\3)\3)\3)\3\u00f7*\3\3\1\5\4\1\7\5\1\t\6\1"+
		"\13\7\1\r\b\1\17\t\1\21\n\1\23\13\1\25\f\1\27\r\1\31\16\1\33\17\1\35\20"+
		"\1\37\21\1!\22\1#\23\1%\24\1\'\25\1)\26\1+\27\1-\30\1/\31\1\61\32\1\63"+
		"\33\1\65\34\1\67\35\19\36\1;\37\1= \1?!\1A\"\2C#\3E$\1G%\1I&\1K\'\1M("+
		"\1O)\1Q*\1\3\2\r\4C\\c|\4C\\c|\5\62;C\\c|\3\"\"\3\17\17\3\f\f\3\62;\3"+
		"\62;\3\62;\4>>@@\4..\60\60\u0137\2\3\3\2\2\2\2\5\3\2\2\2\2\7\3\2\2\2\2"+
		"\t\3\2\2\2\2\13\3\2\2\2\2\r\3\2\2\2\2\17\3\2\2\2\2\21\3\2\2\2\2\23\3\2"+
		"\2\2\2\25\3\2\2\2\2\27\3\2\2\2\2\31\3\2\2\2\2\33\3\2\2\2\2\35\3\2\2\2"+
		"\2\37\3\2\2\2\2!\3\2\2\2\2#\3\2\2\2\2%\3\2\2\2\2\'\3\2\2\2\2)\3\2\2\2"+
		"\2+\3\2\2\2\2-\3\2\2\2\2/\3\2\2\2\2\61\3\2\2\2\2\63\3\2\2\2\2\65\3\2\2"+
		"\2\2\67\3\2\2\2\29\3\2\2\2\2;\3\2\2\2\2=\3\2\2\2\2?\3\2\2\2\2A\3\2\2\2"+
		"\2C\3\2\2\2\2E\3\2\2\2\2G\3\2\2\2\2I\3\2\2\2\2K\3\2\2\2\2M\3\2\2\2\2O"+
		"\3\2\2\2\2Q\3\2\2\2\3S\3\2\2\2\5U\3\2\2\2\7W\3\2\2\2\tY\3\2\2\2\13[\3"+
		"\2\2\2\r]\3\2\2\2\17_\3\2\2\2\21a\3\2\2\2\23c\3\2\2\2\25e\3\2\2\2\27g"+
		"\3\2\2\2\31i\3\2\2\2\33k\3\2\2\2\35m\3\2\2\2\37o\3\2\2\2!q\3\2\2\2#s\3"+
		"\2\2\2%w\3\2\2\2\'{\3\2\2\2)\u0082\3\2\2\2+\u0087\3\2\2\2-\u008c\3\2\2"+
		"\2/\u008f\3\2\2\2\61\u0095\3\2\2\2\63\u0098\3\2\2\2\65\u009d\3\2\2\2\67"+
		"\u00a2\3\2\2\29\u00a5\3\2\2\2;\u00a9\3\2\2\2=\u00c8\3\2\2\2?\u00ca\3\2"+
		"\2\2A\u00d2\3\2\2\2C\u00d8\3\2\2\2E\u00dc\3\2\2\2G\u00ef\3\2\2\2I\u00f1"+
		"\3\2\2\2K\u00fc\3\2\2\2M\u00ff\3\2\2\2O\u0118\3\2\2\2Q\u011a\3\2\2\2S"+
		"T\7_\2\2T\4\3\2\2\2UV\7\'\2\2V\6\3\2\2\2WX\7`\2\2X\b\3\2\2\2YZ\7+\2\2"+
		"Z\n\3\2\2\2[\\\7a\2\2\\\f\3\2\2\2]^\7-\2\2^\16\3\2\2\2_`\7]\2\2`\20\3"+
		"\2\2\2ab\7,\2\2b\22\3\2\2\2cd\7/\2\2d\24\3\2\2\2ef\7*\2\2f\26\3\2\2\2"+
		"gh\7B\2\2h\30\3\2\2\2ij\7)\2\2j\32\3\2\2\2kl\7}\2\2l\34\3\2\2\2mn\7%\2"+
		"\2n\36\3\2\2\2op\7\177\2\2p \3\2\2\2qr\7~\2\2r\"\3\2\2\2st\7u\2\2tu\7"+
		"w\2\2uv\7o\2\2v$\3\2\2\2wx\7h\2\2xy\7q\2\2yz\7t\2\2z&\3\2\2\2{|\7e\2\2"+
		"|}\7j\2\2}~\7q\2\2~\177\7q\2\2\177\u0080\7u\2\2\u0080\u0081\7g\2\2\u0081"+
		"(\3\2\2\2\u0082\u0083\7h\2\2\u0083\u0084\7t\2\2\u0084\u0085\7q\2\2\u0085"+
		"\u0086\7o\2\2\u0086*\3\2\2\2\u0087\u0088\7r\2\2\u0088\u0089\7t\2\2\u0089"+
		"\u008a\7q\2\2\u008a\u008b\7f\2\2\u008b,\3\2\2\2\u008c\u008d\7v\2\2\u008d"+
		"\u008e\7q\2\2\u008e.\3\2\2\2\u008f\u0090\7n\2\2\u0090\u0091\7k\2\2\u0091"+
		"\u0092\7o\2\2\u0092\u0093\7k\2\2\u0093\u0094\7v\2\2\u0094\60\3\2\2\2\u0095"+
		"\u0096\7c\2\2\u0096\u0097\7u\2\2\u0097\62\3\2\2\2\u0098\u0099\7r\2\2\u0099"+
		"\u009a\7t\2\2\u009a\u009b\7q\2\2\u009b\u009c\7d\2\2\u009c\64\3\2\2\2\u009d"+
		"\u009e\7q\2\2\u009e\u009f\7x\2\2\u009f\u00a0\7g\2\2\u00a0\u00a1\7t\2\2"+
		"\u00a1\66\3\2\2\2\u00a2\u00a3\7q\2\2\u00a3\u00a4\7h\2\2\u00a48\3\2\2\2"+
		"\u00a5\u00a6\7o\2\2\u00a6\u00a7\7q\2\2\u00a7\u00a8\7f\2\2\u00a8:\3\2\2"+
		"\2\u00a9\u00aa\7z\2\2\u00aa\u00ab\7q\2\2\u00ab\u00ac\7t\2\2\u00ac<\3\2"+
		"\2\2\u00ad\u00af\7<\2\2\u00ae\u00b0\t\2\2\2\u00af\u00ae\3\2\2\2\u00b0"+
		"\u00b1\3\2\2\2\u00b1\u00af\3\2\2\2\u00b1\u00b2\3\2\2\2\u00b2\u00c9\3\2"+
		"\2\2\u00b3\u00b4\7e\2\2\u00b4\u00b5\7q\2\2\u00b5\u00c9\7u\2\2\u00b6\u00b7"+
		"\7u\2\2\u00b7\u00b8\7k\2\2\u00b8\u00c9\7p\2\2\u00b9\u00ba\7v\2\2\u00ba"+
		"\u00bb\7c\2\2\u00bb\u00c9\7p\2\2\u00bc\u00bd\7n\2\2\u00bd\u00be\7q\2\2"+
		"\u00be\u00c9\7i\2\2\u00bf\u00c0\7n\2\2\u00c0\u00c9\7i\2\2\u00c1\u00c2"+
		"\7n\2\2\u00c2\u00c9\7p\2\2\u00c3\u00c4\7R\2\2\u00c4\u00c9\7t\2\2\u00c5"+
		"\u00c6\7c\2\2\u00c6\u00c7\7d\2\2\u00c7\u00c9\7u\2\2\u00c8\u00ad\3\2\2"+
		"\2\u00c8\u00b3\3\2\2\2\u00c8\u00b6\3\2\2\2\u00c8\u00b9\3\2\2\2\u00c8\u00bc"+
		"\3\2\2\2\u00c8\u00bf\3\2\2\2\u00c8\u00c1\3\2\2\2\u00c8\u00c3\3\2\2\2\u00c8"+
		"\u00c5\3\2\2\2\u00c9>\3\2\2\2\u00ca\u00ce\t\3\2\2\u00cb\u00cd\t\4\2\2"+
		"\u00cc\u00cb\3\2\2\2\u00cd\u00d0\3\2\2\2\u00ce\u00cc\3\2\2\2\u00ce\u00cf"+
		"\3\2\2\2\u00cf@\3\2\2\2\u00d0\u00ce\3\2\2\2\u00d1\u00d3\t\5\2\2\u00d2"+
		"\u00d1\3\2\2\2\u00d3\u00d4\3\2\2\2\u00d4\u00d2\3\2\2\2\u00d4\u00d5\3\2"+
		"\2\2\u00d5\u00d6\3\2\2\2\u00d6\u00d7\b!\2\2\u00d7B\3\2\2\2\u00d8\u00d9"+
		"\t\6\2\2\u00d9\u00da\3\2\2\2\u00da\u00db\b\"\3\2\u00dbD\3\2\2\2\u00dc"+
		"\u00dd\t\7\2\2\u00ddF\3\2\2\2\u00de\u00e0\t\b\2\2\u00df\u00de\3\2\2\2"+
		"\u00e0\u00e1\3\2\2\2\u00e1\u00df\3\2\2\2\u00e1\u00e2\3\2\2\2\u00e2\u00f0"+
		"\3\2\2\2\u00e3\u00e5\t\t\2\2\u00e4\u00e3\3\2\2\2\u00e5\u00e8\3\2\2\2\u00e6"+
		"\u00e4\3\2\2\2\u00e6\u00e7\3\2\2\2\u00e7\u00e9\3\2\2\2\u00e8\u00e6\3\2"+
		"\2\2\u00e9\u00eb\7\60\2\2\u00ea\u00ec\t\n\2\2\u00eb\u00ea\3\2\2\2\u00ec"+
		"\u00ed\3\2\2\2\u00ed\u00eb\3\2\2\2\u00ed\u00ee\3\2\2\2\u00ee\u00f0\3\2"+
		"\2\2\u00ef\u00df\3\2\2\2\u00ef\u00e6\3\2\2\2\u00f0H\3\2\2\2\u00f1\u00f7"+
		"\7$\2\2\u00f2\u00f3\7^\2\2\u00f3\u00f6\7$\2\2\u00f4\u00f6\13\2\2\2\u00f5"+
		"\u00f2\3\2\2\2\u00f5\u00f4\3\2\2\2\u00f6\u00f9\3\2\2\2\u00f7\u00f8\3\2"+
		"\2\2\u00f7\u00f5\3\2\2\2\u00f8\u00fa\3\2\2\2\u00f9\u00f7\3\2\2\2\u00fa"+
		"\u00fb\7$\2\2\u00fbJ\3\2\2\2\u00fc\u00fd\7\61\2\2\u00fd\u00fe\7\61\2\2"+
		"\u00feL\3\2\2\2\u00ff\u0100\7\61\2\2\u0100N\3\2\2\2\u0101\u0102\7\60\2"+
		"\2\u0102\u0103\7\60\2\2\u0103\u0104\7\60\2\2\u0104\u0119\7\60\2\2\u0105"+
		"\u0106\7\60\2\2\u0106\u0107\7\60\2\2\u0107\u0119\7\60\2\2\u0108\u0109"+
		"\7?\2\2\u0109\u0119\7?\2\2\u010a\u010b\7>\2\2\u010b\u010c\7?\2\2\u010c"+
		"\u0119\7@\2\2\u010d\u010e\7/\2\2\u010e\u0119\7@\2\2\u010f\u0119\t\13\2"+
		"\2\u0110\u0111\7?\2\2\u0111\u0119\7@\2\2\u0112\u0119\7?\2\2\u0113\u0114"+
		"\7>\2\2\u0114\u0119\7?\2\2\u0115\u0116\7@\2\2\u0116\u0119\7?\2\2\u0117"+
		"\u0119\t\f\2\2\u0118\u0101\3\2\2\2\u0118\u0105\3\2\2\2\u0118\u0108\3\2"+
		"\2\2\u0118\u010a\3\2\2\2\u0118\u010d\3\2\2\2\u0118\u010f\3\2\2\2\u0118"+
		"\u0110\3\2\2\2\u0118\u0112\3\2\2\2\u0118\u0113\3\2\2\2\u0118\u0115\3\2"+
		"\2\2\u0118\u0117\3\2\2\2\u0119P\3\2\2\2\u011a\u011b\7\60\2\2\u011b\u011c"+
		"\7\60\2\2\u011cR\3\2\2\2\16\2\u00b1\u00c8\u00ce\u00d4\u00e1\u00e6\u00ed"+
		"\u00ef\u00f5\u00f7\u0118";
	public static final ATN _ATN =
		ATNSimulator.deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
	}
}